<style lang="less">
  .tipSetting {
  height: 1200rpx;
  background-color: #F2F2F2;
}

.tipSetting .items {
  margin-top: 20rpx;
  background-color: #000;
}

.tipSetting .text {
  font-size: 24rpx;
  color: #9A9A9A;
  height: 68rpx;
  line-height: 68rpx;
  padding-left: 24rpx;
}

.tipSetting .item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 104rpx;
  border-bottom: 2rpx solid #ccc;
  padding: 0 24rpx 0 32rpx;
  background-color: #fff;
}

.tipSetting .item .right {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  flex-wrap: nowrap;
}

.tipSetting .item .right image {
  width: 28rpx;
  height: 28rpx;
  vertical-align: middle;
}

.tipSetting .item .right .input {
  width: 534rpx;
  height: 66rpx;
  border: 2rpx solid #BBB;
  border-radius: 6rpx;
  color: #101010;
  font-size: 28rpx;
  padding-left: 20rpx;
}

.tipSetting .item .right text {
  font-size: 28rpx;
  color: #666;
  margin-right: 10rpx;
}

.tipSetting .item .right .symbol {
  width: 236rpx;
  height: 68rpx;
  border: 2rpx solid #0497ff;
  border-radius: 10rpx;
  display: flex;
  justify-content: space-around;
  align-items: center;
  margin-left: 10rpx;
}

.tipSetting .item .right .symbol text {
  font-size: 40rpx;
  color: #0497ff;
  margin: 0;
  width: 100%;
  height: 68rpx;
  line-height: 68rpx;
  text-align: center;
}

.tipSetting .item .right .symbol .add {
  border-left: 1rpx solid #0497ff;
}

.tipSetting .btn {
  width: 670rpx;
  height: 98rpx;
  margin-top: 40rpx;
  background-color: #0497FF;
  color: #fff;
}
</style>
<template>
  <view class="tipSetting">
  <view class='items'>
    <view class='item'>
      <text>文件名</text>
      <view class='right'>
        <input class='input' placeholder='新建标签名称' bindinput="getName"></input>
      </view>
    </view>
    <view class='item'>
      <text>宽度</text>
      <view class='right'>
        <text>{{width}}毫米</text>
        <view class='symbol'>
          <text class='subtract' data-target='width' data-add="0" @tap="changeNumber">-</text>
          <text class='add' data-target='width' data-add="1" @tap="changeNumber">+</text>
        </view>
      </view>
    </view>
    <view class='item'>
      <text>高度</text>
      <view class='right'>
        <text>{{height}}毫米</text>
        <view class='symbol'>
          <text class='subtract' data-target='height' data-add="0" @tap="changeNumber">-</text>
          <text class='add' data-target='height' data-add="1" @tap="changeNumber">+</text>
        </view>
      </view>
    </view>
  </view>
  <picker class='items' bindchange="bindPickerChange" value="{{index}}" range="{{array}}">
    <view class='item'>
      <text>预设尺寸</text>
      <view class='right'>
        <image src='/images/@2x/attribute_rightarrow@2x.png'></image>
      </view>
    </view>
  </picker>
  <view wx:if="{{more}}">
    <view class='item'>
      <text>标签排数</text>
      <view class='right'>
        <text>{{rowNum}}排</text>
        <view class='symbol'>
          <text class='subtract' data-target='rowNum' data-add="0" @tap="addNumber">-</text>
          <text class='add' data-target='rowNum' data-add="1" @tap="addNumber">+</text>
        </view>
      </view>
    </view>
    <view class='item'>
      <text>左右间距</text>
      <view class='right'>
        <text>{{lrSpace}}毫米</text>
        <view class='symbol'>
          <text class='subtract' data-target='lrSpace' data-add="0" @tap="addNumber">-</text>
          <text class='add' data-target='lrSpace' data-add="1" @tap="addNumber">+</text>
        </view>
      </view>
    </view>
    <view class='text'>非多排标签保持默认</view>
    <view class='item'>
      <text>上下间距</text>
      <view class='right'>
        <text>{{tbSpace}}毫米</text>
        <view class='symbol'>
          <text class='subtract' data-target='tbSpace' data-add="0" @tap="addNumber">-</text>
          <text class='add' data-target='tbSpace' data-add="1" @tap="addNumber">+</text>
        </view>
      </view>
    </view>
    <view class='text'>常规设置为2毫米</view>
  </view>
  <view class='items' wx:if="{{!more}}">
    <view class='item' @tap='getMore'>
      <text>更多设置</text>
      <view class='right'>
        <image src='/images/@2x/attribute_rightarrow@2x.png'></image>
      </view>
    </view>
  </view>
  <button class='btn' @tap='create'>新建</button>
</view>
</template>

<script>
  import wepy from 'wepy'
  import {connect} from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../mixins/test'

  @connect({
    num(state) {
      return state.counter.num
    },
    asyncNum(state) {
      return state.counter.asyncNum
    },
    sumNum(state) {
      return state.counter.num + state.counter.asyncNum
    }
  })

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '打印'
    }
    components = {}

    mixins = [testMixin]

    data = {
      width: 50,
      height: 30,
      index: 0,
      rowNum: 1,
      lrSpace: 2,
      tbSpace: 2,
      more: false,
      name: '',
      array: ['25 (宽) * 15 (高)', '25 (宽) * 15 (高)', '25 (宽) * 15 (高)', '25 (宽) * 15 (高)'],
    }

    methods ={
      bindPickerChange: function (e) {
        console.log('picker发送选择改变，携带值为', e.detail.value)
        this.setData({
          index: e.detail.value
        })
      },

      getName(e){
        const name = e.detail.value

        this.setData({
          name
        })

        console.log(value)
      },

      create(){
        wx.redirectTo({
          url: '/pages/edit/edit?width=' + this.data.width + '&height=' + this.data.height + '&name=' + this.data.name,
          success: (data) => {
            console.log(data)
          },
          fail: (data) => {
            console.log(data)
          },
        })
      },

      getMore(){
        this.more = true
      },

      changeNumber(e) {
        const target = e.currentTarget.dataset.target
        const add = e.currentTarget.dataset.add
        let value;
        if (add == 1) {
          value = this.data[target] + 10
        } else {
          if (!this.data[target]) return
          value = this.data[target] - 10
        }

        this.setData({
          [target]: value
        })
      },

      addNumber(e) {
        const target = e.currentTarget.dataset.target
        const add = e.currentTarget.dataset.add
        let value;
        if (add == 1) {
          value = this.data[target] + 1
        } else {
          if (!this.data[target]) return
          value = this.data[target] - 1
        }

        this[target] = value
      },
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    onLoad(options) {}
  }
</script>
